name: Provision OKE Cluster with Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Trigger on push to the main branch; adjust as necessary

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
      OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
      OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_PRIVATE_KEY: ${{ secrets.OCI_PRIVATE_KEY }}
      OCI_REGION: ${{ secrets.OCI_REGION }}
      COMPARTMENT_OCID: ${{ secrets.OCI_COMPARTMENT_OCID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8  # Use the desired Terraform version

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform
        run: terraform plan -out=plan.out
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
          TF_VAR_region: ${{ secrets.OCI_REGION }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}

      # - name: Apply Terraform
      #   run: terraform apply -auto-approve plan.out
      #   env:
      #     TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
      #     TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
      #     TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
      #     TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
      #     TF_VAR_region: ${{ secrets.OCI_REGION }}
      #     TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
